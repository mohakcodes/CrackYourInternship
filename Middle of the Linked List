class Solution {
public:
    ListNode* middleNode(ListNode* head)
    {
        ListNode* slow = head;
        ListNode* fast = head;
        
        while(fast!=NULL && fast->next!=NULL)
        {
            slow = slow->next;
            fast = fast->next->next;
        }
        return slow;
    }
};

// or

class Solution {
public:
    int count(ListNode* head)
    {
        int ct = 0;
        ListNode* temp = head;
        while(temp!=NULL)
        {
            ct++;
            temp = temp->next;
        }
        return ct;
    }
    ListNode* middleNode(ListNode* head)
    {
        if(head != NULL)
        {
            int x = count(head)/2+1;
        
            ListNode* temp = head;
            int y=1;
            while(temp!=NULL)
            {
                if(y==x) return temp;
                else
                {
                    y++;
                    temp = temp->next;
                }
            }
        }
        return NULL;
    }
};
