class Solution {
public:
    Node* flatten(Node* head)
    {
        if(head==NULL) return head;
        stack<Node*>s;
        Node* curr = head;
        while(!s.empty() || curr)
        {
            if(!curr->next)
            {
                if(!s.empty())
                {
                    Node* join = s.top();
                    s.pop();
                    if(join != NULL)
                    {
                        join->prev = curr;
                    }
                    curr->next = join;
                }
            }
            if(curr->child)
            {
                s.push(curr->next);
                curr->next = curr->child;
                curr->child = NULL;
                curr->next->prev = curr;
            }
            curr = curr->next;
        }
        return head;
    }
};
