class Solution {
public:
    ListNode* solution(ListNode* l1, ListNode* l2 , int &carry)
    {
        if(l1 == NULL && l2 == NULL) return NULL;
        
        ListNode* nn = new ListNode(-1);
        nn->next = solution(l1->next , l2->next , carry);
        
        nn->val = (l1->val + l2->val + carry)%10;
        carry = (l1->val + l2->val + carry)/10;
        
        return nn;
    }
    
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2)
    {
        ListNode* p1 = l1;
        ListNode* p2 = l2;
        while(p1!=NULL || p2!=NULL)
        {
            if(p1==NULL)
            {
                ListNode* nn = new ListNode(0);
                nn->next = l1;
                l1 = nn;
                p2 = p2->next;
            }
            else if(p2==NULL)
            {
                ListNode* nn = new ListNode(0);
                nn->next = l2;
                l2 = nn;
                p1 = p1->next;
            }
            else
            {
                p1 = p1->next;
                p2 = p2->next;
            }
        }
        
        int carry = 0;
        ListNode* dummy = new ListNode(-1);
        dummy->next = solution(l1 , l2 , carry);
        if(carry!=0)
        {
            ListNode* nn = new ListNode(carry);
            nn->next = dummy->next;
            dummy->next = nn;
        }
        return dummy->next;
    }
};
