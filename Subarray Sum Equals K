class Solution {
public:
    int subarraySum(vector<int>& nums, int k)
    {
        int sum = 0;
        int count = 0;
        unordered_map<int,int>ans;
        ans[0]++;
        for(int i=0;i<nums.size();i++)
        {
            sum += nums[i];
            
            if(ans.find(sum-k) != ans.end())
            {count += ans[sum-k];}
            
            ans[sum]++;
        }
        return count;
    }
};

// or

class Solution {
public:
    int subarraySum(vector<int>& nums, int k)
    {
        int sum = 0;
        int count = 0;
        unordered_map<int,int>ans;
        for(int i=0;i<nums.size();i++)
        {
            sum += nums[i];
            if(sum == k)
            {count++;}
            
            if(ans.find(sum-k) != ans.end())
            {count += ans[sum-k];}
            
            ans[sum]++;
        }
        return count;
    }
};
