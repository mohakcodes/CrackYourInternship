#include <iostream>
using namespace std;
 
long* productExceptSelf(int a[], int n)
{
    long prod = 1;
    long flag = 0;
    
    for (int i = 0; i < n; i++)
    {
        if (a[i] == 0) flag++;
        else           prod *= a[i];
    }
    
    long* arr = new long[n];
 
    for (int i = 0; i < n; i++)
    {
        // number of elements in array with value 0 is more than 1 --> each value in new array will = 0
        if (flag > 1)
        {
            arr[i] = 0;
        }
        
        // if no element of array = 0 --> insert (product/a[i]) in new array
        else if (flag == 0)
        {
            arr[i] = (prod / a[i]);
        }
 
        // if 1 element of array = 0 then all the elements except that index value = 0
        else if (flag == 1 && a[i] != 0)
        {
            arr[i] = 0;
        }
 
        // if(flag == 1 && a[i] == 0)
        else
        {
            arr[i] = prod;
        }
    }
    return arr;
}

int main()
{
    int n = 5;
    int array[] = { 10, 3, 5, 6, 2 };
 
    long* ans;
    ans = productExceptSelf(array, n);
 
    for (int i = 0; i < n; i++) {
        cout << ans[i] << " ";
    }
    return 0;
}
