class Solution {
public:
    
    ListNode* mergeList(ListNode* l1 , ListNode* l2)
    {
        ListNode* curr = new ListNode(0);
        ListNode* ptr = curr;
        
        while(l1!=NULL && l2!=NULL)
        {
            if(l1->val > l2->val)
            {
                ptr->next = l2;
                l2=l2->next;
            }
            else
            {
                ptr->next = l1;
                l1=l1->next;
            }
            ptr=ptr->next;
        }
        if(l1!=NULL) ptr->next=l1;
        
        if(l2!=NULL) ptr->next=l2;
        
        return curr->next;
    }
    
    ListNode* sortList(ListNode* head)
    {
        if(head==NULL || head->next==NULL) return head;
        
        ListNode *temp=NULL , *slow=head , *fast=head;
        
        while(fast!=NULL && fast->next!=NULL)
        {
            temp = slow;
            slow=slow->next;
            fast=fast->next->next;
        }
        
        temp->next = NULL;
        
        ListNode* l1 = sortList(head);
        ListNode* l2 = sortList(slow);
        return mergeList(l1,l2);
    }
};
