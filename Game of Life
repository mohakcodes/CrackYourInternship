class Solution {
public:
    
    int livelocation(vector<vector<int>> &arr , int i , int j , int m , int n)
    {
        int live = 0;
        //upper
        if(i>0)
        {
            if(arr[i-1][j] == 1 || arr[i-1][j] == 3) live++;
        }
        //lower
        if(i<m-1)
        {
            if(arr[i+1][j] == 1 || arr[i+1][j] == 1) live++;
        }
        //left
        if(j>0)
        {
            if(arr[i][j-1] == 1 || arr[i][j-1] == 3) live++;
        }
        //right
        if(j<n-1)
        {
            if(arr[i][j+1] == 1 || arr[i][j+1] == 3) live++;
        }
        //4directions
        if(i>0 && j>0)
        {
            if(arr[i-1][j-1] == 1 || arr[i-1][j-1] == 3) live++;
        }
        if(i>0 && j<n-1)
        {
            if(arr[i-1][j+1] == 1 || arr[i-1][j+1] == 3) live++;
        }
        if(j>0 && i<m-1)
        {
            if(arr[i+1][j-1] == 1 || arr[i+1][j-1] == 3) live++;
        }
        if(i<m-1 && j<n-1)
        {
            if(arr[i+1][j+1] == 1 || arr[i+1][j+1] == 3) live++;
        }
        return live;
    }
    
    void gameOfLife(vector<vector<int>>& board)
    {
        int m = board.size();
        int n = board[0].size();
        
        for(int i=0;i<m;i++)
        {
            for(int j=0;j<n;j++)
            {
                int live = livelocation(board , i , j , m , n);
                
                if(board[i][j] == 0)
                {
                    if(live == 3)
                    {
                        board[i][j] = 2; //newly alive
                    }
                }
                else if(board[i][j] == 1)
                {
                    if(live < 2 || live > 3)
                    {
                        board[i][j] = 3; //newly dead
                    }
                }
            }
        }
        for(int i=0;i<m;i++)
        {
            for(int j=0;j<n;j++)
            {
                if(board[i][j] == 2)
                { board[i][j] = 1; }
                
                else if(board[i][j] == 3)
                { board[i][j] = 0; }
            }
        }
    }
};
