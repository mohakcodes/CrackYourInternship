class Solution {
public:
    vector<vector<int>> threeSum(vector<int>& arr)
    {
        sort(arr.begin() , arr.end());
        int n=arr.size();
        if(n < 3 || arr[0] > 0)
        {
            return {};
        }
        vector<vector<int>>ans;
        
        for(int i=0;i<n-2;i++)
        {
            if(i>0 && arr[i] == arr[i-1])
            {
                continue;
            }
            if(arr[i] > 0)
            {
                break;
            }
            int l = i+1;
            int r = n-1;
            while(l<r)
            {
                int sum = arr[i] + arr[l] + arr[r];
                if(sum < 0)
                {
                    l++;
                }
                else if(sum > 0)
                {
                    r--;
                }
                else
                {
                    ans.push_back({arr[i] , arr[l] , arr[r]});
                    int low = arr[l];
                    int high = arr[r];
                    while(l<r && arr[l] == low)
                    {
                        l++;
                    }
                    while(l<r && arr[r] == high)
                    {
                        r--;
                    }
                }
            }
        }
        return ans;
    }
};

//or

class Solution {
public:
    vector<vector<int>> threeSum(vector<int>& arr)
    {
        sort(arr.begin() , arr.end());
        int n=arr.size();
        if(n < 3 || arr[0] > 0)
        {
            return {};
        }
        vector<vector<int>>ans;
        
        for(int i=0;i<n-2;i++)
        {
            if( i==0 || (i>0 && arr[i] != arr[i-1]) )
            {
                if(arr[i] > 0)
                {
                    break;
                }
                int l = i+1;
                int r = n-1;
                while(l<r)
                {
                    int sum = arr[i] + arr[l] + arr[r];
                    if(sum < 0)
                    {
                        l++;
                    }
                    else if(sum > 0)
                    {
                        r--;
                    }
                    else
                    {
                        ans.push_back({arr[i] , arr[l] , arr[r]});
                        int low = arr[l];
                        int high = arr[r];
                        while(l<r && arr[l] == low)
                        {
                            l++;
                        }
                        while(l<r && arr[r] == high)
                        {
                            r--;
                        }
                    }
                }
            }
        }
        return ans;
    }
};
